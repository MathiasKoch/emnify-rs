/*
 * EMnify Rest API
 *
 * Rest API resources of the EMnify System.
 *
 * The version of the OpenAPI document: 1.3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ListDataStreamerV2s200Response {
    /// Descriptive name or purpose of the data stream
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "destination", skip_serializing_if = "Option::is_none")]
    pub destination: Option<Box<crate::models::ListDataStreamerV2s200ResponseDestination>>,
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<crate::models::ListDataStreamerV2s200ResponseFiltersInner>>,
    #[serde(
        rename = "data_stream_type",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub data_stream_type: Option<Option<serde_json::Value>>,
    #[serde(
        rename = "relation_resolution",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub relation_resolution: Option<Option<serde_json::Value>>,
    #[serde(
        rename = "status",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub status: Option<Option<serde_json::Value>>,
}

impl ListDataStreamerV2s200Response {
    pub fn new() -> ListDataStreamerV2s200Response {
        ListDataStreamerV2s200Response {
            name: None,
            destination: None,
            filters: None,
            data_stream_type: None,
            relation_resolution: None,
            status: None,
        }
    }
}
