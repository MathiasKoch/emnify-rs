/*
 * EMnify Rest API
 *
 * Rest API resources of the EMnify System.
 *
 * The version of the OpenAPI document: 1.3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TariffProfile1 {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<f32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "used_count", skip_serializing_if = "Option::is_none")]
    pub used_count: Option<String>,
    #[serde(rename = "organisation_id", skip_serializing_if = "Option::is_none")]
    pub organisation_id: Option<String>,
    #[serde(rename = "tariff", skip_serializing_if = "Option::is_none")]
    pub tariff: Option<Box<crate::models::TariffProfile1Tariff>>,
    #[serde(rename = "inclusive_volume", skip_serializing_if = "Option::is_none")]
    pub inclusive_volume: Option<Box<crate::models::TariffProfileInclusiveVolume>>,
}

impl TariffProfile1 {
    pub fn new() -> TariffProfile1 {
        TariffProfile1 {
            id: None,
            name: None,
            description: None,
            used_count: None,
            organisation_id: None,
            tariff: None,
            inclusive_volume: None,
        }
    }
}
